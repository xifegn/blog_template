syntax = "v1"

info(
	title: "user"
	desc: "Slim Dog"
	author: "west wind"
	email: "hahahai@gmail.com"
	version: "0.0"
)
type (
	RegisterReq {
		Name     string `json:"name"`
		Username string `json:"username"`
		Password string `json:"password"`
		Email    string `json:"email"`
	}

	RegisterResp {
		Id       int64  `json:"id"`
		Name     string `json:"name"`
		Username string `json:"username"`
		Email    string `json:"email"`
	}

	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
	}

	UserInfoResp {
		Id        int64  `json:"id"`
		Name      string `json:"name"`
		Username  string `json:"username"`
		Email     string `json:"email"`
		Avator    string `json:"avator"`
		Signature string `json:"signature"`
	}
	DelReq {
		Id int64 `json:"id"`
	}
	DelResp {
		Code int64 `json:"code"`
	}
	ModifyAvatarReq {
		Username string `json:"username"`
	}
	ModifyAvatarResp {
		Avator string `json:"avator"`
	}
)
@server (
	group: user
)
service main-api {
	@handler Login
	post /user/login (LoginReq) returns (LoginResp)

	@handler Register
	post /user/register (RegisterReq) returns (RegisterResp)

	@handler Delete
	post /user/remove (DelReq) returns (DelResp)
}

@server (
	jwt: Auth
	group: user
)
service main-api {
	@handler UserInfo
	post /user/userinfo returns (UserInfoResp)

	@handler ModifyAvatar
	post /user/modify (ModifyAvatarReq) returns (ModifyAvatarResp)
}